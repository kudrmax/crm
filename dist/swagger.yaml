openapi: 3.1.0
info:
  title: CRMz
  version: 0.1.0
paths:
  /contacts/:
    get:
      tags:
        - Contacts
      summary: Get All Contacts
      operationId: get_all_contacts_contacts__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
    post:
      tags:
        - Contacts
      summary: Add Contact
      operationId: add_contact_contacts__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SContactCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SContactRead'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /contacts/{contact_id}:
    get:
      tags:
        - Contacts
      summary: Get One Or None Contacts By Id
      operationId: get_one_or_none_contacts_by_id_contacts__contact_id__get
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Contact Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/SContactRead'
                  - type: 'null'
                title: >-
                  Response Get One Or None Contacts By Id Contacts  Contact Id 
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Contacts
      summary: Delete Contact
      operationId: delete_contact_contacts__contact_id__delete
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Contact Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/SContactRead'
                  - type: 'null'
                title: Response Delete Contact Contacts  Contact Id  Delete
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Contacts
      summary: Update Contact
      operationId: update_contact_contacts__contact_id__put
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Contact Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SContactUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SContactRead'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /contacts/name/{name}:
    get:
      tags:
        - Contacts
      summary: Get One Or None Contacts By Name
      operationId: get_one_or_none_contacts_by_name_contacts_name__name__get
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/SContactRead'
                  - type: 'null'
                title: >-
                  Response Get One Or None Contacts By Name Contacts Name  Name 
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /contacts/search/{name}:
    get:
      tags:
        - Contacts
      summary: Search Contact
      operationId: search_contact_contacts_search__name__get
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: Name
        - name: name_count
          in: query
          required: false
          schema:
            type: integer
            default: 6
            title: Name Count
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SContactRead'
                title: Response Search Contact Contacts Search  Name  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /logs/:
    post:
      tags:
        - Logs
      summary: Add Log
      operationId: add_log_logs__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLogCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLogRead'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /logs/{contact_id}:
    get:
      tags:
        - Logs
      summary: Get All Logs
      operationId: get_all_logs_logs__contact_id__get
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Contact Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SLogRead'
                title: Response Get All Logs Logs  Contact Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /logs/by_date:
    post:
      tags:
        - Logs
      summary: Get Log By Date
      operationId: get_log_by_date_logs_by_date_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLogGetByDate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SLogRead'
                type: array
                title: Response Get Log By Date Logs By Date Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /:
    get:
      summary: Root
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    SContactCreate:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
        - name
      title: SContactCreate
    SContactRead:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        phone:
          anyOf:
            - type: string
            - type: 'null'
          title: Phone
        telegram:
          anyOf:
            - type: string
            - type: 'null'
          title: Telegram
        birthday:
          anyOf:
            - type: string
              format: date
            - type: 'null'
          title: Birthday
        area:
          anyOf:
            - type: string
            - type: 'null'
          title: Area
      type: object
      required:
        - id
      title: SContactRead
    SContactUpdate:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        phone:
          anyOf:
            - type: string
            - type: 'null'
          title: Phone
        telegram:
          anyOf:
            - type: string
            - type: 'null'
          title: Telegram
        birthday:
          anyOf:
            - type: string
              format: date
            - type: 'null'
          title: Birthday
        area:
          anyOf:
            - type: string
            - type: 'null'
          title: Area
      type: object
      title: SContactUpdate
    SLogCreate:
      properties:
        contact_id:
          type: string
          format: uuid
          title: Contact Id
        datetime:
          type: string
          format: date-time
          title: Datetime
        log:
          type: string
          title: Log
      type: object
      required:
        - contact_id
        - datetime
        - log
      title: SLogCreate
    SLogGetByDate:
      properties:
        contact_id:
          type: string
          format: uuid
          title: Contact Id
        datetime:
          type: string
          format: date-time
          title: Datetime
      type: object
      required:
        - contact_id
        - datetime
      title: SLogGetByDate
    SLogRead:
      properties:
        id:
          type: integer
          title: Id
        contact_id:
          type: string
          format: uuid
          title: Contact Id
        datetime:
          type: string
          format: date-time
          title: Datetime
        log:
          type: string
          title: Log
      type: object
      required:
        - id
        - contact_id
        - datetime
        - log
      title: SLogRead
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
